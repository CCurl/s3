xX 0(reset s3)
:CR "%n";
:CODE 0@1[nc@#58=(n1-c@59=(13,10,),];
:YN #("y")~("n");
:REGS 'Z'A[n@(n@n"%n%c: %d")];
:HELLOWORLD "hello world!";
:LOCS s3 s4 i3 d4 r3 r4 + "locals: %d";
:VER "s3 v0.0.1";
:BENCH xT$ 0[] ELAPSED;
:BENCHW xT$ {d#}\ ELAPSED;
:ELAPSED xT$-." usecs";
:MIL 1000#**;
:BENCHES 0 [# MIL BENCH CR]\;
:ULTESTD "UnloopTest-DO: " 100 1[n .b n 23=("-out"xU^)] "ERROR!";
:ULTESTW "UnloopTest-WHILE: " 100{# .b #73=("-out"\xU^) 1-#} "ERROR!";
:MULTI "This"
" is a multiline"
" function";
:JMPTBL 1000;
:JTSET  0(a n--) JMPTBL+!;
:JTGET  0(n--a)  JMPTBL+@;
:JTEXEC 0(n--)   JTGETq<;
:_"-anonynous A-"; 'A JTSET
:_"-anonynous B-"; 'B JTSET
:RELOAD 1000#|src.s3|\xL;
VER
123 sA 44567 sZ
CR 345.678 f. " (sb-345.678)"
CR REGS
CR HELLOWORLD
CR 1 YN 0 YN
CR 111 222 LOCS
CR "DO-BENCH " 50 MIL BENCH
CR "WHILE-BENCH " 50 MIL BENCHW
CR ULTESTD "-back"
CR ULTESTW "-back"
CR MULTI
CR 'A JTEXEC 'B JTEXEC
CR CR CODE CR
0(xQ)
